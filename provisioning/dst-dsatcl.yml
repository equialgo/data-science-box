---
- hosts: 127.0.0.1
  sudo: yes
  connection: local
  vars:
    parallel_version: 20140622
  tasks:

    - name: Make sure that the repos directory exists
      file: path=/home/{{ dst_username }}/repos state=directory owner={{ dst_username }} group={{ dst_username }}
    - name: Make sure that the .bin directory exists
      file: path=/home/{{ dst_username }}/.bin state=directory owner={{ dst_username }} group={{ dst_username }}

    - name: Add repository for node.js
      apt_repository: repo='ppa:chris-lea/node.js' update-cache=yes

    - name: Configure Go
      shell: echo 'golang-go golang-go/dashboard boolean true' > /tmp/preseed.conf
    - shell: debconf-set-selections /tmp/preseed.conf

    - name: Install Ubuntu packages
      apt: pkg={{item}} state=latest
      with_items:
        - git
        - python-pycurl
        - python-dev
        - libxml2-dev # lxml
        - libxslt1-dev # lxml
        - zlib1g-dev # lxml
        - python-numpy
        - python-scipy
        - python-scikits-learn
        - tree
        - imagemagick # display
        - feedgnuplot
        - bc
        - libeigen3-dev #tapkee
        - libarpack2-dev # tapkee
        - cmake # tapkee
        - golang-go
        - nodejs
        - make
        - curl
        - g++
        - python-software-properties 
        - p7zip-full
        - unrar-free
        - unzip
        - openjdk-6-jdk
        - leiningen
        - cowsay
        #- mysql-common
        #- libmysqlclient-dev 
        #- python-matplotlib
        #- python-pandas
        #- python-nose
        #- python-sympy

    - name: Get Data Science at the Command Line tools, data, and scripts
      git: repo=https://github.com/jeroenjanssens/data-science-at-the-command-line.git dest=/home/{{ dst_username }}/.data-science-at-the-command-line 
    - name: Create symlink for book directory
      shell: ln -s /home/{{ dst_username }}/.data-science-at-the-command-line/book /home/{{ dst_username }}/book

    - shell: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    - apt_repository: repo='deb http://cran.rstudio.com/bin/linux/ubuntu trusty/' state=present
    - apt: pkg=r-base-dev state=latest update_cache=yes
    - name: Install R packages
      shell: echo "install.packages(c('{{item}}'),repos='http://cran.us.r-project.org')" | R --slave --no-save --no-restore-history
      with_items:
        - ggplot2
        - sqldf
        - dplyr


    - name: Install jq
      get_url: url=http://stedolan.github.io/jq/download/linux64/jq dest=/home/{{ dst_username }}/.bin/jq mode=0755 owner={{ dst_username }} group={{ dst_username }}

    - name: Install json2csv
      shell: sudo GOPATH=/home/{{ dst_username }}/.go go get github.com/jehiah/json2csv

    - name: Get npm
      get_url: url=http://npmjs.org/install.sh dest=/tmp/install.sh
    - name: Install npm
      shell: sudo clean=yes sh /tmp/install.sh

    - name: Install xml2json
      npm: name=xml2json-command global=yes

    - name: Install Python packages
      pip: name={{item}} state=latest
      with_items:
        - awscli
        - csvkit
        - bigmler
        - cssselect
        - lxml
        - joblib
        - six
        - PrettyTable
        - beautifulsoup4
        - configparser
        - futures
        - logutils

    - name: Download GNU Parallel
      get_url: url=http://ftp.gnu.org/gnu/parallel/parallel-{{ parallel_version }}.tar.bz2 dest=/home/{{ dst_username }}/parallel-{{ parallel_version }}.tar.bz2
    - name: Install GNU Parallel
      shell: | 
        tar -xvjf /home/{{ dst_username }}/parallel-{{ parallel_version }}.tar.bz2
        rm parallel-{{ parallel_version }}.tar.bz2
        cd parallel-{{ parallel_version }}
        ./configure && make && make install
        cd ..
        rm -rf parallel-{{ parallel_version }}
      args:
        chdir: /home/{{ dst_username }}/

    - name: Install SKLL
      pip: name=skll state=latest extra_args=--no-deps

    - name: Get Drake
      git: repo=https://github.com/Factual/drake.git dest=/home/{{ dst_username }}/repos/drake/
    - name: Compile Drake
      shell: chdir=/home/{{ dst_username}}/repos/drake /usr/bin/lein uberjar
    - name: Move Drake
      shell: mv /home/{{ dst_username}}/repos/drake/drake.jar /home/{{ dst_username }}/.bin/
    - name: Get Drip
      git: repo=https://github.com/flatland/drip.git dest=/home/{{ dst_username }}/.drip-repo
    - name: Install Drip
      shell: chdir=/home/{{ dst_username }}/.drip-repo make prefix=/home/{{ dst_username }}/.bin/ install

    - name: Download csvfix
      get_url: url=https://bitbucket.org/neilb/csvfix/get/version-1.6.zip dest=/tmp/csvfix.zip
    - name: Unpack csvfix
      shell: chdir=/tmp/ unzip csvfix.zip; mv neilb* csvfix
    - name: Install csvfix
      shell: chdir=/tmp/csvfix make lin
    - name: Move csvfix
      shell: mv /tmp/csvfix/csvfix/bin/csvfix /home/{{ dst_username }}/.bin/

    - name: Get Weka
      get_url: url=http://downloads.sourceforge.net/project/weka/weka-3-7/3.7.11/weka-3-7-11.zip dest=/home/{{ dst_username}}/repos/weka.zip
    - name: Install Weka
      shell: |
        unzip weka.zip
        mv weka-3-7-11/weka.jar /home/{{ dst_username}}/.bin/weka.jar
      args:
        chdir: /home/{{ dst_username}}/repos

    #- name: Get Tapkee
      #git: repo=https://github.com/lisitsyn/tapkee.git dest=/home/{{ dst_username }}/repos/tapkee/
    #- file: path=/home/{{ dst_username }}/repos/tapkee/build state=directory 
    #- shell: cmake .. && make
      #args:
        #chdir: /home/{{ dst_username }}/repos/tapkee/build
    #- name: Move Tapkee
      #shell: mv /home/{{ dst_username}}/repos/tapkee/bin/tapkee /home/{{ dst_username }}/.bin/

    - name: Clone csvquote
      git: repo=https://github.com/dbro/csvquote.git dest=/home/{{ dst_username }}/repos/csvquote/
    - name: Install csvquote
      shell: chdir=/home/{{ dst_username }}/repos/csvquote make; make install

    - name: Delete repos directory
      shell: rm -rf /home/{{ dst_username }}/repos

    - name: Create symlink for dotfiles
      shell: ln -sf /home/{{ dst_username }}/.data-science-at-the-command-line/dst/build/bundle/dotfiles/{{ item }} /home/{{ dst_username }}/.{{ item }}
      with_items:
        - bash_aliases
        - bash_completion
        - bashrc
        - profile

    - name: Create symlink for MOTD
      shell: ln -sf /home/{{ dst_username }}/.data-science-at-the-command-line/dst/build/bundle/motd/{{ item }} /etc/update-motd.d/{{ item }}
      with_items:
        - 00-header
        - 10-help-text

    - name: Update MOTD
      shell: run-parts /etc/update-motd.d/ | tee /var/run/motd.dynamic

    - name: Change owner
      file: path=/home/{{ dst_username }} state=directory owner={{ dst_username }} group={{ dst_username }} recurse=yes

    #- name: Download Q
      #get_url: url=https://raw.github.com/harelba/q/1.3.0/q dest=/home/{{ dst_username }}/tools/q mode=0755 owner={{ dst_username }} group={{ dst_username }}
    #- name: Download TextQL
      #shell: sudo GOPATH=/home/{{ dst_username }}/.go go get github.com/dinedal/textql
